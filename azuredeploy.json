{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcesPrefix": {
      "type": "string",
      "defaultValue": "ptx",
      "metadata": {
        "description": "Naming prefix for ALL the resources in this deployment. 8-char max, lowercase alpha & numbers"
      }
    },
    "adDomainName": {
      "type": "string",
      "defaultValue": "contoso.azure",
      "metadata": {
        "description": "FQDN for Active Directory Domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "Domain & local machine Administrator username (canÂ´t be 'administrator' or 'root', please choose another)"
      }
    },
    "adminPassword": {
      "defaultValue": null,
      "type": "secureString",
      "metadata": {
        "description": "Administrator password"
      }
    },
    "sqlServiceUsername": {
      "type": "string",
      "defaultValue": "azuredba",
      "metadata": {
        "description": "SQL Superver service account"
      }
    },
    "sqlServicePassword": {
      "defaultValue": null,
      "type": "secureString",
      "metadata": {
        "description": "SQL Server service account password"
      }
    }
  },
  "variables": {
    "CreateFailOverCluster-Step1": "https://raw.githubusercontent.com/pateixei/ptx-sqlAoCluster/master/CreateSQLAoCluster-Step1.json",
    "CreateFailOverCluster-Step2": "https://raw.githubusercontent.com/pateixei/ptx-sqlAoCluster/master/CreateSQLAoCluster-Step2.json",
    "avSets_sql": "[concat(parameters('resourcesPrefix'),'-sql')]",
    "avSets_web": "[concat(parameters('resourcesPrefix'),'-iis')]",
    "vm_dc01": "[concat(parameters('resourcesPrefix'),'-dc01')]",
    "vm_web01": "[concat(parameters('resourcesPrefix'),'-web01')]",
    "vm_sql01": "[concat(parameters('resourcesPrefix'),'-sql01')]",
    "vm_sql02": "[concat(parameters('resourcesPrefix'),'-sql02')]",
    "nic_web01nic01": "[concat(parameters('resourcesPrefix'),'-web01nic01')]",
    "nic_dc01nic01": "[concat(parameters('resourcesPrefix'),'-dc01nic01')]",
    "nic_sql01nic01": "[concat(parameters('resourcesPrefix'),'-sql01nic01')]",
    "nic_sql01nic02": "[concat(parameters('resourcesPrefix'),'-sql01nic02')]",
    "nic_sql02nic01": "[concat(parameters('resourcesPrefix'),'-sql02nic01')]",
    "nic_sql02nic02": "[concat(parameters('resourcesPrefix'),'-sql02nic02')]",
    "nsg_web01": "[concat(parameters('resourcesPrefix'),'-web01')]",
    "nsg_dc01": "[concat(parameters('resourcesPrefix'),'-dc01')]",
    "nsg_sql": "[concat(parameters('resourcesPrefix'),'-sql')]",
    "pip_web01": "[concat(parameters('resourcesPrefix'),'-web01')]",
    "pip_dc01": "[concat(parameters('resourcesPrefix'),'-dc01')]",
    "pip_sql01": "[concat(parameters('resourcesPrefix'),'-sql01')]",
    "pip_sql02": "[concat(parameters('resourcesPrefix'),'-sql02')]",
    "vnet_name": "[concat(parameters('resourcesPrefix'),'-vnet')]",
    "storageAccounts_01": "[concat(parameters('resourcesPrefix'),'dc01')]",
    "storageAccounts_sql01": "[concat(parameters('resourcesPrefix'),'sql01')]",
    "storageAccounts_sql02": "[concat(parameters('resourcesPrefix'),'sql02')]",
    "ilbName": "[concat(parameters('resourcesPrefix'),'-ilb')]",
    "ilbNicName": "[concat(parameters('resourcesPrefix'),'-ilbNic')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
    "adModulesURL": "https://github.com/pateixei/ptx-sqlAoCluster/raw/master/CreateADPDC.ps1.zip",
    "adConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "sqlAOPrepareModulesURL": "https://github.com/pateixei/ptx-sqlAoCluster/raw/master/CreateSqlCluster.zip",
    "sqlAOPrepareConfigurationFunction": "CreateClusterNode01.ps1\\PrepareAlwaysOnSqlServer",
    "CreateFailOverClusterModulesURL": "https://github.com/pateixei/ptx-sqlAoCluster/raw/master/CreateSqlCluster.zip",
    "CreateFCConfigurationFunction": "CreateClusterNode02.ps1\\CreateFailoverCluster",
    "ClusterName": "[concat(parameters('resourcesPrefix'),'SqlFC')]",
    "sqlAlwaysOnEndpointName": "[concat(parameters('resourcesPrefix'),'-SqlEndp')]",
    "sqlAlwaysOnAvailabilityGroupName": "[concat(parameters('resourcesPrefix'),'-SqlAG')]",
    "sqlAlwaysOnAvailabilityGroupListenerName": "[concat(parameters('resourcesPrefix'),'-SqlListener')]",
    "lbName": "[concat(parameters('resourcesPrefix'),'-ilb')]",
    "lbAddress": "172.16.1.10",
    "vm_dc01ip01": "172.16.0.5",
    "vm_web01ip01": "172.16.10.5",
    "vm_sql01ip01": "172.16.1.5",
    "vm_sql02ip01": "172.16.1.6",
    "vm_sql01ip02": "172.16.2.5",
    "vm_sql02ip02": "172.16.2.6",
    "primaryReplica": "[variables('vm_sql02')]",
    "secondaryReplica": "[variables('vm_sql01')]",
    "dnsServerName": "[variables('vm_dc01')]",
    "databaseNames": [ "[concat(parameters('resourcesPrefix'),'-test-db01')]", "[concat(parameters('resourcesPrefix'),'-test-db02')]" ]
},
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccounts_sql01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccounts_sql02')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccounts_01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet_name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "172.16.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "ad-subnet",
            "properties": {
              "addressPrefix": "172.16.0.0/24"
            }
          },
          {
            "name": "db-subnet",
            "properties": {
              "addressPrefix": "172.16.1.0/24"
            }
          },
          {
            "name": "hb-subnet",
            "properties": {
              "addressPrefix": "172.16.2.0/24"
            }
          },
          {
            "name": "web-subnet",
            "properties": {
              "addressPrefix": "172.16.10.0/24"
            }
          }
        ],
        "dhcpOptions": {
          "dnsServers": [
            "[variables('vm_dc01ip01')]",
            "168.63.129.16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_dc01nic01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('vm_dc01ip01')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_dc01'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/ad-subnet')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [ ]
        },
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_dc01'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_dc01'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_dc01'))]"
      ]
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_web01nic01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('vm_web01ip01')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_web01'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/web-subnet')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [ ]
        },
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_web01'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_web01'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_web01'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_sql01nic01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql01'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_sql'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('vm_sql01ip01')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql01'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/db-subnet')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/sql-lb-be')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('vm_dc01ip01')]"
          ]
        },
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_sql'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_sql01nic02')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAddress": "[variables('vm_sql01ip02')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/hb-subnet')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [ ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql01'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_sql02nic01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql02'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_sql'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAddress": "[variables('vm_sql02ip01')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql02'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/db-subnet')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/sql-lb-be')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('vm_dc01ip01')]"
          ]
        },
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_sql'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic_sql02nic02')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAddress": "[variables('vm_sql02ip02')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name')), '/subnets/hb-subnet')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_sql02'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('ilbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnet_name'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "sql-lb-fe",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('lbAddress')]",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/db-subnet' )]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "sql-lb-be"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "sql-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/frontendIpConfigurations/sql-lb-fe')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/sql-lb-be')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/probes/sql-probe')]"
              },
              "protocol": "tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "sql-probe",
            "properties": {
              "protocol": "tcp",
              "port": 59999,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg_dc01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg_web01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-http",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg_sql')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pip_dc01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('vm_dc01')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pip_web01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('vm_web01')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pip_sql01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('vm_sql01')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pip_sql02')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('vm_sql02')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSets_sql')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSets_web')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm_dc01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_01'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_dc01nic01'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vm_dc01')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('storageAccounts_01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_dc01'),'-os-disk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_dc01'),'-data-disk-1.vhd'))]"
              },
              "name": "[concat(variables('vm_dc01'),'-data-disk-1')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "512",
              "lun": 0
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vm_dc01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [ ],
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_dc01nic01'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccounts_01'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm_web01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_web'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_01'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_web01nic01'))]"
      ],
      "resources": [
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_web'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "storageProfile": {

          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vm_web01')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('storageAccounts_01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_web01'),'-osdisk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
          ]
        },
        "osProfile": {
          "computerName": "[variables('vm_web01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [ ],
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_web01nic01'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccounts_01'),'.blob.core.windows.net')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm_sql01')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_sql'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_sql01'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql01nic01'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql01nic02'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_sql'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_GS3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP1-WS2012R2",
            "sku": "Enterprise",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vm_sql01')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-osdisk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('vm_sql01'),'-disk-1')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-1.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 1,
              "name": "[concat(variables('vm_sql01'),'-disk-2')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-2.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 2,
              "name": "[concat(variables('vm_sql01'),'-disk-3')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-3.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 3,
              "name": "[concat(variables('vm_sql01'),'-disk-4')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-4.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 4,
              "name": "[concat(variables('vm_sql01'),'-disk-5')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-5.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 5,
              "name": "[concat(variables('vm_sql01'),'-disk-6')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql01'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql01'),'-disk-6.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vm_sql01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [ ],
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql01nic01'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql01nic02'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccounts_01'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm_sql02')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_sql'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_sql02'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql02nic01'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql02nic02'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSets_sql'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_GS3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP1-WS2012R2",
            "sku": "Enterprise",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vm_sql02')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-osdisk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('vm_sql02'),'-disk-1')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-1.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 1,
              "name": "[concat(variables('vm_sql02'),'-disk-2')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-2.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 2,
              "name": "[concat(variables('vm_sql02'),'-disk-3')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-3.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 3,
              "name": "[concat(variables('vm_sql02'),'-disk-4')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-4.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 4,
              "name": "[concat(variables('vm_sql02'),'-disk-5')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-5.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            },
            {
              "lun": 5,
              "name": "[concat(variables('vm_sql02'),'-disk-6')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('storageAccounts_sql02'), '.blob.core.windows.net', concat('/vhds/', variables('vm_sql02'),'-disk-6.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": 1023
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vm_sql02')]",
          "adminUsername": "[parameters('adminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [ ],
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql02nic01'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_sql02nic02'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccounts_01'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_dc01'),'/ForestSetup')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/VirtualMachines', variables('vm_dc01'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('adModulesURL')]",
          "ConfigurationFunction": "[variables('adConfigurationFunction')]",
          "Properties": {
            "DomainName": "[parameters('AdDomainName')]",
            "sharePath": "SqlFsw",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_web01'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/VirtualMachines', variables('vm_web01'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_dc01'),'ForestSetup' )]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[parameters('adDomainName')]",
          "User": "[concat(parameters('adDomainName'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_sql01'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/VirtualMachines', variables('vm_sql01'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_dc01'),'ForestSetup' )]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[parameters('adDomainName')]",
          "User": "[concat(parameters('adDomainName'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_sql02'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/VirtualMachines', variables('vm_sql02'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_dc01'),'ForestSetup' )]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[parameters('adDomainName')]",
          "User": "[concat(parameters('adDomainName'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_sql01'),'/ClusterSetupNode01')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_sql01'),'joindomain' )]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.13",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "wmfVersion": "4.0",
          "modulesUrl": "[variables('sqlAOPrepareModulesURL')]",
          "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
          "properties": {
            "domainName": "[parameters('adDomainName')]",
            "sqlAlwaysOnEndpointName": "[concat(parameters('resourcesPrefix'),'-hadr')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sqlServiceCreds": {
              "userName": "[parameters('sqlServiceUserName')]",
              "password": "PrivateSettingsRef:sqlServerServiceAccountPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServerServiceAccountPassword": "[parameters('sqlServicePassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm_sql02'),'/ClusterSetupNode02')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_sql02'),'joindomain' )]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vm_sql01'),'ClusterSetupNode01' )]"
      ],

      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.13",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "wmfVersion": "4.0",
          "modulesUrl": "[variables('CreateFailOverClusterModulesURL')]",
          "configurationFunction": "[variables('CreateFCConfigurationFunction')]",
          "properties": {
            "domainName": "[parameters('adDomainName')]",
            "ClusterName": "[variables('clusterName')]",
            "SharePath": "[concat('\\\\',variables('vm_dc01'),'\\sqlfsw')]",
            "Nodes": [
              "[variables('vm_sql02')]",
              "[variables('vm_sql01')]"
            ],
            "sqlAlwaysOnAvailabilityGroupListenerPort": 1433,
            "SqlAlwaysOnEndpointName": "[variables('sqlAlwaysOnEndpointName')]",
            "SqlAlwaysOnAvailabilityGroupName": "[variables('sqlAlwaysOnAvailabilityGroupName')]",
            "SqlAlwaysOnAvailabilityGroupListenerName": "[variables('sqlAlwaysOnAvailabilityGroupListenerName')]",
            "LBName": "[variables('lbName')]",
            "LBAddress": "[variables('lbAddress')]",
            "PrimaryReplica": "[variables('primaryReplica')]",
            "SecondaryReplica": "[variables('secondaryReplica')]",
            "DatabaseNames": "[variables('databaseNames')]",
            "DNSServerName": "[variables('dnsServerName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sQLServiceCreds": {
              "userName": "[parameters('sqlServiceUserName')]",
              "password": "PrivateSettingsRef:sqlServicePassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServicePassword": "[parameters('sqlServicePassword')]"
          }
        }
      }
    }
  ]
}